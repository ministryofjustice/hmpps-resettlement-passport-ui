generic-service:
  nameOverride: hmpps-resettlement-passport-ui

  replicaCount: 4

  image:
    repository: quay.io/hmpps/hmpps-resettlement-passport-ui
    tag: app_version # override at deployment time
    port: 3000

  ingress:
    enabled: true
    host: app-hostname.local # override per environment
    tlsSecretName: resettlement-passport-ui-cert

  livenessProbe:
    httpGet:
      path: /ping

  readinessProbe:
    httpGet:
      path: /ping

  custommetrics:
    enabled: true
    scrapeInterval: 15s
    metricsPath: /metrics
    metricsPort: 3001

  # Environment variables to load into the deployment
  env:
    NODE_ENV: "production"
    REDIS_TLS_ENABLED: "true"
    TOKEN_VERIFICATION_ENABLED: "true"
    APPLICATIONINSIGHTS_CONNECTION_STRING: "InstrumentationKey=$(APPINSIGHTS_INSTRUMENTATIONKEY);IngestionEndpoint=https://northeurope-0.in.applicationinsights.azure.com/;LiveEndpoint=https://northeurope.livediagnostics.monitor.azure.com/"

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    hmpps-resettlement-passport-ui:
      APPINSIGHTS_INSTRUMENTATIONKEY: "APPINSIGHTS_INSTRUMENTATIONKEY"
      API_CLIENT_ID: "API_CLIENT_ID"
      API_CLIENT_SECRET: "API_CLIENT_SECRET"
      SESSION_SECRET: "SESSION_SECRET"
    elasticache-redis:
      REDIS_HOST: "primary_endpoint_address"
      REDIS_AUTH_TOKEN: "auth_token"
    s3-bucket-output:
      FEATURE_FLAG_BUCKET: "bucket_name"
      CONFIG_BUCKET: "bucket_name"

  allowlist:
    groups:
      - internal
      - prisons
      - private_prisons

gotenberg:
  nameOverride: gotenberg
  replicaCount: 2

  image:
    repository: gotenberg/gotenberg
    tag: 7.7.0
    port: 3000

  containerCommand: [ "gotenberg" ]
  containerArgs: [ "--chromium-ignore-certificate-errors","--api-timeout=30s","--pdfengines-engines=pdftk","--uno-listener-restart-threshold=0" ]

  ingress:
    enabled: false

  livenessProbe:
    httpGet:
      path: /health
    periodSeconds: 30
    initialDelaySeconds: 60
    timeoutSeconds: 20
    failureThreshold: 10

  readinessProbe:
    httpGet:
       path: /health
    periodSeconds: 20
    initialDelaySeconds: 60
    timeoutSeconds: 30
    failureThreshold: 15

  podSecurityContext:
    fsGroup: 1001

  securityContext:
    runAsUser: 1001
    privileged: false
    runAsNonRoot: true
      
generic-prometheus-alerts:
  targetApplication: hmpps-resettlement-passport-ui

deploy_grafana_dashboards: false
